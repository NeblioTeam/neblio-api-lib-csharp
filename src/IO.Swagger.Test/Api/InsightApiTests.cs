/* 
 * Neblio REST API Suite
 *
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing InsightApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class InsightApiTests
    {
        private InsightApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new InsightApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InsightApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' InsightApi
            //Assert.IsInstanceOfType(typeof(InsightApi), instance, "instance is a InsightApi");
        }

        
        /// <summary>
        /// Test GetAddress
        /// </summary>
        [Test]
        public void GetAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //var response = instance.GetAddress(address);
            //Assert.IsInstanceOf<GetAddressResponse> (response, "response is GetAddressResponse");
        }
        
        /// <summary>
        /// Test GetAddressBalance
        /// </summary>
        [Test]
        public void GetAddressBalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //var response = instance.GetAddressBalance(address);
            //Assert.IsInstanceOf<GetAddressBalanceResponse> (response, "response is GetAddressBalanceResponse");
        }
        
        /// <summary>
        /// Test GetAddressTotalReceived
        /// </summary>
        [Test]
        public void GetAddressTotalReceivedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //var response = instance.GetAddressTotalReceived(address);
            //Assert.IsInstanceOf<GetAddressTotalReceivedResponse> (response, "response is GetAddressTotalReceivedResponse");
        }
        
        /// <summary>
        /// Test GetAddressTotalSent
        /// </summary>
        [Test]
        public void GetAddressTotalSentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //var response = instance.GetAddressTotalSent(address);
            //Assert.IsInstanceOf<GetAddressTotalSentResponse> (response, "response is GetAddressTotalSentResponse");
        }
        
        /// <summary>
        /// Test GetAddressUnconfirmedBalance
        /// </summary>
        [Test]
        public void GetAddressUnconfirmedBalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //var response = instance.GetAddressUnconfirmedBalance(address);
            //Assert.IsInstanceOf<GetAddressUnconfirmedBalanceResponse> (response, "response is GetAddressUnconfirmedBalanceResponse");
        }
        
        /// <summary>
        /// Test GetAddressUtxos
        /// </summary>
        [Test]
        public void GetAddressUtxosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //var response = instance.GetAddressUtxos(address);
            //Assert.IsInstanceOf<GetAddressUtxosResponse> (response, "response is GetAddressUtxosResponse");
        }
        
        /// <summary>
        /// Test GetBlock
        /// </summary>
        [Test]
        public void GetBlockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockhash = null;
            //var response = instance.GetBlock(blockhash);
            //Assert.IsInstanceOf<GetBlockResponse> (response, "response is GetBlockResponse");
        }
        
        /// <summary>
        /// Test GetBlockIndex
        /// </summary>
        [Test]
        public void GetBlockIndexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? blockindex = null;
            //var response = instance.GetBlockIndex(blockindex);
            //Assert.IsInstanceOf<GetBlockIndexResponse> (response, "response is GetBlockIndexResponse");
        }
        
        /// <summary>
        /// Test GetRawTx
        /// </summary>
        [Test]
        public void GetRawTxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string txid = null;
            //var response = instance.GetRawTx(txid);
            //Assert.IsInstanceOf<GetRawTxResponse> (response, "response is GetRawTxResponse");
        }
        
        /// <summary>
        /// Test GetStatus
        /// </summary>
        [Test]
        public void GetStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string q = null;
            //var response = instance.GetStatus(q);
            //Assert.IsInstanceOf<GetStatusResponse> (response, "response is GetStatusResponse");
        }
        
        /// <summary>
        /// Test GetSync
        /// </summary>
        [Test]
        public void GetSyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetSync();
            //Assert.IsInstanceOf<GetSyncResponse> (response, "response is GetSyncResponse");
        }
        
        /// <summary>
        /// Test GetTx
        /// </summary>
        [Test]
        public void GetTxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string txid = null;
            //var response = instance.GetTx(txid);
            //Assert.IsInstanceOf<GetTxResponse> (response, "response is GetTxResponse");
        }
        
        /// <summary>
        /// Test GetTxs
        /// </summary>
        [Test]
        public void GetTxsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //string block = null;
            //decimal? page = null;
            //var response = instance.GetTxs(address, block, page);
            //Assert.IsInstanceOf<GetTxsResponse> (response, "response is GetTxsResponse");
        }
        
        /// <summary>
        /// Test SendTx
        /// </summary>
        [Test]
        public void SendTxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendTxRequest body = null;
            //var response = instance.SendTx(body);
            //Assert.IsInstanceOf<BroadcastTxResponse> (response, "response is BroadcastTxResponse");
        }
        
    }

}
